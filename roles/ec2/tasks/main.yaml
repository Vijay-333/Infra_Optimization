---
- name: Install boto packages
  pip:
    name: "{{ packages }}"
    state: present
- name: Install Security Group
  ec2_group:
    name: "{{ sg }}"
    description: Creating SG for EC2 instances
    region: "{{ region }}"
    aws_access_key: "{{ Access_key }}"
    aws_secret_key: "{{ Secret_key }}"
    aws_security_token: "{{ Security_token }}"
    rules:
      - proto: all
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_out
- name: Create Key pair
  ec2_key:
    name: "{{ keyname }}"
    region: "{{ region }}"
    aws_access_key: "{{ Access_key }}"
    aws_secret_key: "{{ Secret_key }}"
    aws_security_token: "{{ Security_token }}"
    force: true
  register: key
- name: Create EC2 instances
  ec2_instance:
    aws_access_key: "{{ Access_key }}"
    aws_secret_key: "{{ Secret_key }}"
    aws_security_token: "{{ Security_token }}"
    instance_type: "{{ instance_type }}"
    image_id: "{{ ami_id }}"
    key_name: "{{ keyname }}"
    wait: true
    security_group: "{{ sg_out.group_id }}"
    count: 1
    vpc_subnet_id: "{{ subnet }}"
    network:
      assign_public_ip: true
    region: "{{ region }}"
    state: running
    name: "{{ item }}"
  register: ec2
  loop: "{{ instance }}"
- name: Second Task - Print the full output
  ansible.builtin.debug:
    var: ec2
- name: Add master instance to inventory
  add_host:
    hostname: "{{ ec2.results[0].instances[0].public_ip_address }}"
    groupname: master
- name: Add worker1 instance to inventory
  add_host:
    hostname: "{{ ec2.results[1].instances[0].public_ip_address }}"
    groupname: worker1
- name: Add worker2 instance to inventory
  add_host:
    hostname: "{{ ec2.results[2].instances[0].public_ip_address }}"
    groupname: worker2
- name: Waiting for master to start
  wait_for:
    host: "{{ ec2.results[0].instances[0].public_dns_name }}"
    port: 22
    state: started
- name: Waiting for worker1 to start
  wait_for:
    host: "{{ ec2.results[1].instances[0].public_dns_name }}"
    port: 22
    state: started
- name: Waiting for worker2 to start
  wait_for:
    host: "{{ ec2.results[2].instances[0].public_dns_name }}"
    port: 22
    state: started
